# -*- coding: utf-8 -*-
"""estructura de datoss.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d2LZl9tnw01arjYCOBeUNUJ0WETaOKd8
"""

"""Actividades parte 1: Iniciando
Desarrollar en Python las siguientes consignas utilizando los recursos ya vistos (variables, input, print, if, if - else, while, for)
que consideren adecuados para cada uno de estos casos:)
"""
# Inicializar una lista vacía para almacenar los nombres
nombres = []

# Solicitar al usuario que ingrese 10 nombres no repetidos
for i in range(10):
    nombre = input("Ingrese un nombre de persona: ")
    # Verificar si el nombre ya está en la lista
    while nombre in nombres:
        print("¡El nombre ya existe! Ingrese un nombre diferente.")
        nombre = input("Ingrese un nombre de persona: ")
    # Agregar el nombre a la lista
    nombres.append(nombre)

# Mostrar la lista de nombres
print("Los nombres ingresados son:")
for nombre in nombres:
    print(nombre)

# Eliminar la tercera y la última persona de la lista
del nombres[2]  # Elimina la tercera persona
del nombres[-1]  # Elimina la última persona

# Ordenar la lista
nombres.sort()

# Mostrar la lista ordenada
print("La lista de nombres ordenada es:")
for nombre in nombres:
    print(nombre)

# Crear un diccionario vacío para almacenar los datos de la persona
persona = {}

# Solicitar al usuario que ingrese los datos de la persona
persona["nombre"] = input("Ingrese el nombre de la persona: ")
persona["apellido"] = input("Ingrese el apellido de la persona: ")
persona["dni"] = input("Ingrese el DNI de la persona: ")
persona["email"] = input("Ingrese el correo electrónico de la persona: ")
persona["fecha_nacimiento"] = input("Ingrese la fecha de nacimiento de la persona (YYYY-MM-DD): ")

# Mostrar los datos de la persona almacenados en el diccionario
print("Los datos de la persona son:")
for clave, valor in persona.items():
    print(f"{clave}: {valor}")

# Crear un diccionario llamado familia para almacenar los datos de las personas
familia = {}

# Solicitar los datos de cada persona y agregarlos al diccionario familia
for i in range(1, 5):
    print(f"Ingresando datos de la persona {i}:")
    datos_persona = {}  # Crear un diccionario vacío para cada persona
    datos_persona["nombre"] = input("Ingrese el nombre de la persona: ")
    datos_persona["apellido"] = input("Ingrese el apellido de la persona: ")
    datos_persona["dni"] = input("Ingrese el DNI de la persona: ")
    datos_persona["email"] = input("Ingrese el correo electrónico de la persona: ")
    datos_persona["fecha_nacimiento"] = input("Ingrese la fecha de nacimiento de la persona (YYYY-MM-DD): ")

    # Agregar el diccionario de datos de la persona al diccionario familia
    familia[f"persona{i}"] = datos_persona

# Mostrar los datos de todas las personas en la familia
print("\nDatos de todas las personas en la familia:")
for persona, datos in familia.items():
    print(f"\n{persona}:")
    for clave, valor in datos.items():
        print(f"{clave}: {valor}")

# Solicitar al usuario que ingrese el valor de n
n = int(input("Ingrese el valor de n: "))

# Inicializar una lista para almacenar los números pares
num_pares = []

# Generar los primeros n números pares y guardarlos en la lista
for i in range(1, n + 1):
    num_pares.append(2 * i)

# Convertir la lista a una tupla
tupla_pares = tuple(num_pares)

# Mostrar los datos de la tupla
print("Los primeros", n, "números pares son:", tupla_pares)